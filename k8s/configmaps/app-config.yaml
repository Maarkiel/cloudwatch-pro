apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudwatch-pro-config
  namespace: cloudwatch-pro
  labels:
    app: cloudwatch-pro
data:
  # Database Configuration
  POSTGRES_HOST: "postgres-service"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "cloudwatch_users"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  # InfluxDB Configuration
  INFLUXDB_URL: "http://influxdb-service:8086"
  INFLUXDB_ORG: "cloudwatch-pro"
  INFLUXDB_BUCKET: "metrics"
  
  # Elasticsearch Configuration
  ELASTICSEARCH_URL: "http://elasticsearch-service:9200"
  
  # Kafka Configuration
  KAFKA_BOOTSTRAP_SERVERS: "kafka-service:9092"
  
  # Application Configuration
  LOG_LEVEL: "INFO"
  ENVIRONMENT: "production"
  
  # API Gateway Configuration
  RATE_LIMIT_REQUESTS: "1000"
  RATE_LIMIT_WINDOW: "3600"
  
  # Metrics Collector Configuration
  COLLECTION_INTERVAL: "60"
  METRICS_RETENTION_DAYS: "30"
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: cloudwatch-pro
  labels:
    app: cloudwatch-pro
    component: frontend
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;
        
        server {
            listen 80;
            server_name _;
            root /usr/share/nginx/html;
            index index.html;
            
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Referrer-Policy "no-referrer-when-downgrade" always;
            add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
            
            location / {
                try_files $uri $uri/ /index.html;
            }
            
            location /api/ {
                proxy_pass http://api-gateway-service:8000;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            location /ws/ {
                proxy_pass http://api-gateway-service:8000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
            
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }

